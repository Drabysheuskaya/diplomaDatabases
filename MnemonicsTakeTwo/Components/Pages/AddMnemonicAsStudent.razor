@rendermode InteractiveAuto
@page "/add-mnemonic-as-student"
@using MnemonicsTakeTwo.Data
@using MnemonicsTakeTwo.Services
@inject IDepartmentService DepartmentService
@inject IMnemonicService MnemonicService
@inject IUserService UserService
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<h3>Add Mnemonic as Student</h3>

<EditForm Model="mnemonic" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudTextField @bind-Value="mnemonic.Name" Label="Name" Required="true" ShrinkLabel="true" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudTextField @bind-Value="mnemonic.Phrase" Label="Phrase" Required="true" ShrinkLabel="true" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField @bind-Value="mnemonic.Description" Label="Description" Required="true" ShrinkLabel="true" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSelect T="int" Label="Department" @bind-Value="selectedDepartmentId" Required="true">
                @foreach (var department in departments)
                {
                    <MudSelectItem T="int" Value="@department.Id">@department.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSelect T="string" Label="Admin User" @bind-Value="selectedAdminUserId" Required="true">
                @foreach (var user in adminUsers)
                {
                    <MudSelectItem T="string" Value="@user.Id">@user.UserName</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12">
            <InputFile OnChange="SelectImage" />
            @if (imageData == null)
            {
                <MudText Color="Color.Error">Please upload an image.</MudText>
            }
        </MudItem>
        <MudItem xs="12">
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="LoadImage" Disabled="@(selectedFile == null)">Load Image</MudButton>
        </MudItem>
        <MudItem xs="12">
            <MudButton Type="submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(imageData == null)" OnClick="HandleValidSubmit">Add Mnemonic</MudButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private Mnemonic mnemonic = new Mnemonic();
    private List<Department> departments = new();
    private List<ApplicationUser> adminUsers = new();
    private int selectedDepartmentId;
    private string selectedAdminUserId;
    private byte[] imageData;
    private IBrowserFile selectedFile;

    protected override async Task OnInitializedAsync()
    {
        departments = (await DepartmentService.GetDepartmentsAsync()).ToList();
        adminUsers = (await UserService.GetUsersInRoleAsync("admin")).ToList();
    }

    private void SelectImage(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task LoadImage()
    {
        if (selectedFile != null)
        {
            using var stream = selectedFile.OpenReadStream();
            using var memoryStream = new MemoryStream();
            await stream.CopyToAsync(memoryStream);
            imageData = memoryStream.ToArray();
        }
    }

    private async Task HandleValidSubmit()
    {
        if (imageData == null)
        {
   
            imageData = null; // Placeholder for image data
        }

        mnemonic.Image = imageData;
        mnemonic.IsApproved = false; // Set IsApproved to false
        int mnemonicId = await MnemonicService.AddMnemonicAsync(mnemonic);
        await MnemonicService.AddRequestedMnemonicAsync(new RequestedMnemonic { MnemonicId = mnemonicId, UserId = selectedAdminUserId, DepartmentId = selectedDepartmentId });
        Navigation.NavigateTo("/departments");
    }
}
